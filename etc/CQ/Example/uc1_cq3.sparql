# UC1-CQ 3:  What are the products that contain substances with common active moiety <active moiety x>?
PREFIX cmns-dsg:    <https://www.omg.org/spec/Commons/Designators/>
PREFIX cmns-cmp:    <https://www.omg.org/spec/Commons/Composites/>
PREFIX cmns-qtu:    <https://www.omg.org/spec/Commons/QuantitiesAndUnits/>
PREFIX idmp-mprd:   <https://spec.pistoiaalliance.org/idmp/ontology/ISO/ISO11615-MedicinalProducts/>
PREFIX idmp-sub:    <https://spec.pistoiaalliance.org/idmp/ontology/ISO/ISO11238-Substances/>
PREFIX rdf:         <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:        <http://www.w3.org/2000/01/rdf-schema#>
 
SELECT DISTINCT ?Product(SAMPLE(?ProductLabel) AS ?ProductName)

WHERE {
    # Bind Variable Substance <$ActiveMoiety>
	# Example for AMPLODIPINE: <https://spec.pistoiaalliance.org/idmp/ontology/EXT/Examples/AmlodipineExample/Amlodipine>
  	# Example for Terlipressin: <https://spec.pistoiaalliance.org/idmp/ontology/EXT/Examples/TerlipressinExample/Terlipressin>
    BIND(uc1_cq3_parameter_1 AS $ActiveMoiety )
  
  	# Get Substances with active moiety $ActiveMoiety
        {
        # Use the shortcut (isActiveMoietyOf or hasActiveMoiety)
        ?Substance ^idmp-sub:isActiveMoietyOf|idmp-sub:hasActiveMoiety $ActiveMoiety .
        } UNION {
        # Use the $ActiveMoiety in a role for composition that defines a substance.
        [] cmns-dsg:defines ?Substance ;
                cmns-cmp:hasRole [
                       a idmp-sub:ActiveMoietyRole ;
                       cmns-cmp:isPlayedBy $ActiveMoiety
        ] .
        } UNION {
    BIND($ActiveMoiety AS ?Substance)
    }
  
    # Make sure that we only return actual substances
    ?Substance a/rdfs:subClassOf* idmp-sub:Substance .
    # Get Product to Substance
  	{
        # Using Shortcut 
        ?Product cmns-dsg:isDefinedIn|^cmns-dsg:defines [ ?hasRole 
            [ 
                cmns-cmp:isPlayedBy ?Substance;
                a/rdfs:subClassOf* idmp-sub:Ingredient
            ] 
        ]
    }UNION{ 
        # using Product Composition and (In)ActiveIngredient and specifiedSubstance as chain
        
        # defining specified Sub
        ?specifiedSubstanceUri rdf:type/rdfs:subClassOf* idmp-sub:SpecifiedSubstance .
        ?specifiedSubstanceUri cmns-qtu:specializes ?Substance .


        # get all Ingredients, that are active or inactive
        {
            ?ingredientType rdfs:subClassOf* idmp-sub:ActiveIngredient
        }
        UNION
        {
            ?ingredientType rdfs:subClassOf* idmp-sub:InactiveIngredient
        }
        ?IngredientUri rdf:type ?ingredientType .
                
        # Ingredient to Specified Substance
        ?IngredientUri cmns-cmp:isPlayedBy ?specifiedSubstanceUri .

        # connect product COmposition to Ingredient
        ?productCompositionUri idmp-sub:hasIngredient ?IngredientUri .
        
        # define product Composition
        ?productCompositionUri rdf:type/rdfs:subClassOf* idmp-mprd:ProductComposition .
        
        #connect Product Composition to Manufactured Item
        ?Product cmns-dsg:isDefinedIn ?productCompositionUri .


    }
    # Optionally, get the name of the Product
    OPTIONAL{?Product  rdfs:label  ?ProductLabel }
  
} GROUP BY ?Product
ORDER BY ?Product