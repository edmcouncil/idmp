PREFIX iter: <http://w3id.org/sparql-generate/iter/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX fun: <http://w3id.org/sparql-generate/fn/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX idmp-phdf: <https://spec.pistoiaalliance.org/idmp/ontology/ISO/ISO11239-PharmaceuticalDoseForms/>
PREFIX idmp-mprd: <https://spec.pistoiaalliance.org/idmp/ontology/ISO/ISO11615-MedicinalProducts/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX idmp-chg: <https://spec.pistoiaalliance.org/idmp/ontology/META/ChangeManagement/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX cmns-cls: <https://www.omg.org/spec/Commons/Classifiers/>
PREFIX idmp-pdf: <https://spec.pistoiaalliance.org/idmp/ontology/ISO/ISO11239-PharmaceuticalDoseForms/> 
PREFIX idmp-edqm:  <https://data.pistoiaalliance.org/idmp/edqm/>


GENERATE {
  <https://data.pistoiaalliance.org/idmp/edqm/PDF> rdf:type owl:Ontology ;
        rdfs:label                 "EDQM Pharmaceutial Dose Form" ;
        dct:license                "http://opensource.org/licenses/MIT"^^xsd:anyURI ;
        dct:source                 "This data originates from EDQM Standard Terms database (http://standardterms.edqm.eu), it is reproduced with permission of the European Directorate for the Quality of Medicines & HealthCare, Council of Europe (EDQM). This data was retrieved from the Standard Terms database on 04.05.2023. This data may have changed since then, the EDQM Standard Terms database is not a static list." ;
        idmp-chg:hasMaturityLevel  idmp-chg:Informative ;
        .

  <https://data.pistoiaalliance.org/idmp/edqm/{ ?FullID }>
    a idmp-mprd:PharmaceuticalDoseForm;
    skos:prefLabel ?Name_english, ?Lang_label;
    dct:isIdentifiedBy ?FullID;
    skos:definition ?Definition_english;
    dct:modified ?Last_updated;
    dct:created ?Created_Date ;
    rdf:comment ?comment_final;
    cmns-cls:isClassifiedBy ?IdmpSubstanceDomain;
    idmp-pdf:hasReleaseCharacteristic <https://data.pistoiaalliance.org/idmp/edqm/{ ?FullID_RCA }>;
    idmp-pdf:hasBasicDoseForm <https://data.pistoiaalliance.org/idmp/edqm/{ ?FullID_BDF }>;
    idmp-pdf:hasTransformationProcedure <https://data.pistoiaalliance.org/idmp/edqm/{ ?FullID_TRA }>;
    idmp-pdf:hasIntendedSite <https://data.pistoiaalliance.org/idmp/edqm/{ ?FullID_ISI }>;
    idmp-pdf:hasAdministrationMethod <https://data.pistoiaalliance.org/idmp/edqm/{ ?FullID_AME }>;
    .
}
ITERATOR iter:JSONSurfer(<EDQM-PDF.json>,
  "$[*]",
  "$.class",
  "$.code",
  "$.monograph",
  "$.domain",
  "$.status",
  "$.creation_date",
  "$.modification_date",
  "$.english",
  "$.definition",
  "$.comment",
  "$.req_auth",
  "$.auth_req_id",
  "$.auth_reg_term",
  "$.edqm_req_id",
  "$.version",
  "$.version_date",
  "$.translations",
  "$.links"
  ) AS
?I1
?class
?code
?monograph
?domain
?status
?creation_date
?modification_date
?term
?definition
?comment
?req_auth
?auth_req_id
?auth_reg_term
?edqm_req_id
?version
?version_date
?translations
?links


BIND( CONCAT(CONCAT(STR(?class),"-"),STR(?code)) AS ?FullID )

BIND(
    IF(?domain = "Human only", <https://spor.ema.europa.eu/rmswi/#/lists/100000000004/terms/100000000012>,
    IF(?domain = "Veterinary only", <https://spor.ema.europa.eu/rmswi/#/lists/100000000004/terms/100000000013>,
    IF(?domain = "Human and Veterinary", <https://spor.ema.europa.eu/rmswi/#/lists/100000000004/terms/100000000014>,
    ?unbound )))
    AS ?IdmpSubstanceDomain )
  
BIND("en" AS ?english )

BIND( STRLANG("{?term}","{?english}") AS ?Name_english )

BIND(IF(?definition,STRLANG("{?definition}","{?english}"),?unbound) AS ?Definition_english)
  
BIND(?creation_date AS ?Created_Date)

BIND(?modification_date AS ?Last_updated)

BIND(IF(?comment,?comment,?unbound) AS ?comment_final)

ITERATOR iter:JSONSurfer(?translations,
  "$[*]",
  "$.language",
  "$.region",
  "$.term",
  "$.version",
  "$.version_date"
  ) AS
?I1_translations
?language
?region
?lang_term
?lang_version
?lang_version_date

BIND(IF(?lang_term != "-",STRLANG("{?lang_term}","{?language}"),?unbound) AS ?Lang_label)

ITERATOR iter:JSONListKeys(?links) AS ?key

BIND(fun:JSONPath(?links, '$.{?key}' ) AS ?iterableLinks)

ITERATOR iter:JSONSurfer(?iterableLinks,
  "$[*]",
  "$.code",
  "$.term"
)AS
?IT1_link
?link_code
?link_term

BIND(IF(?key = "BDF",CONCAT(CONCAT(?key,"-"),?link_code),?unbound) AS ?FullID_BDF)
BIND(IF(?key = "AME",CONCAT(CONCAT(?key,"-"),?link_code),?unbound) AS ?FullID_AME)
BIND(IF(?key = "ISI",CONCAT(CONCAT(?key,"-"),?link_code),?unbound) AS ?FullID_ISI)
BIND(IF(?key = "RCA",CONCAT(CONCAT(?key,"-"),?link_code),?unbound) AS ?FullID_RCA)
BIND(IF(?key = "TRA",CONCAT(CONCAT(?key,"-"),?link_code),?unbound) AS ?FullID_TRA)
